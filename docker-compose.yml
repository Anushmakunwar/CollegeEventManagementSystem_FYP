services:
  my-postgres:
    image: postgres:15
    container_name: cms-postgres
    env_file:
      - ./server/.env
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=asuroot
      - POSTGRES_DB=fypcms
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - proxy

  backend:
    build:
      context: ./server
      target: production
    container_name: backend
    ports:
      - "3333:3333"
    env_file:
      - ./server/.env
    depends_on:
      - my-postgres
    restart: always
    networks:
      - proxy
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      # - public
    entrypoint: ["/bin/sh", "-c", "while ! nc -z backend 3333; do sleep 1; done; nginx -g 'daemon off;'"]
    restart: always
    networks:
      - proxy

networks:
  proxy:
    driver: bridge

volumes:
  postgres-data:

